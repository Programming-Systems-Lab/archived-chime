; Color matching rules: the bigger is number,
; more different colors are considered "close"
Video.Null.TextureManager.RGBDist = 2000000

; The following parameter defines how strong the texture manager should push
; when introducing 128 uniformly-distributed-in-RGB-space colors into the
; overall palette (256-color modes only). With 0 you'll get just the colors
; that are present in textures, with 100 you'll get 128 uniformly-distributed
; colors plus 128 colors taken from textures.
Video.Null.TextureManager.UniformBias = 75

; Texture cache size (default - 8MB)
; The possible suffixes (after the number) are:
;  - KB for KiloBytes
;  - MB for MegaBytes
;  - KP for KiloPixels (1KP = 1024 pixels = 1KB * BytesPerPixel)
;  - MP for MegaPixels
Video.Null.TextureManager.Cache = 5MP

; Mipmap coefficient: the bigger, the faster mipmaps switches
Video.Null.TextureManager.MipmapCoef = 1.3

; Apply dithering while reducing textures from 24-bit color to 8-bit paletted?
; There are seldom textures that you will note any difference with/out this
; option; on the other hand it is CPU intensive (during preprocessing stage).
; Note that if DITHER_TEXTURES=no you still can use the "DITHER(yes|no)"
; per-texture option in world file; this is a global switch that will override
; the per-texture option to be always "yes".
Video.Null.TextureManager.DitherTextures = no

; Override the 2D driver
;Video.Null.Canvas=crystalspace.graphics2d.asciiart
